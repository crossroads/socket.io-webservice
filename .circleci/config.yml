version: 2.1

aliases:
  - defaults: &defaults
      docker:
        - image: circleci/node:boron
      working_directory: ~/code
  - &restore-repo-cache
      key: socket-goodcity-repo-{{ .Environment.CIRCLE_SHA1 }}
  - &restore-yarn-cache
      keys:
        - socket-goodcity-yarn-packages-{{ checksum "yarn.lock" }}
  - &save-yarn-cache
      key: socket-goodcity-yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - node_modules
        - ~/.cache/yarn
  - &yarn
    |
      yarn install --non-interactive --cache-folder ~/.cache/yarn --frozen-lockfile
  - &restore-bundle-cache
      key: socket-goodcity-bundle-{{ checksum "Gemfile.lock" }}
  - &save-bundle-cache
      key: socket-goodcity-bundle-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: socket-goodcity-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/code

  package_dependencies:
    <<: *defaults
    steps:
      - restore_cache: *restore-repo-cache
      - restore_cache: *restore-yarn-cache
      - run: *yarn
      - save_cache: *save-yarn-cache
      
  deployment:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.7.3-node
    steps:
      - restore_cache: *restore-repo-cache
      - restore_cache: *restore-yarn-cache
      - run: bundle check --path=vendor/bundle || bundle install --deployment --jobs=4 --retry=3
      - save_cache: *save-bundle-cache
      - run: |
          ([ "$CIRCLE_BRANCH" == "live" ] && bundle exec cap production deploy) || ([ "$CIRCLE_BRANCH" == "master" ] && bundle exec cap staging deploy) || ([ "$CIRCLE_BRANCH" == "preview" ] && bundle exec cap preview deploy)

workflows:
    build-test-and-deploy:
      jobs:
        - checkout_code
        - package_dependencies:
            requires:
              - checkout_code
        - deployment:
            requires:
              - package_dependencies
            filters:
              branches:
                only: /^(master|live)$/
